[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Our main goal is to produce and disseminate knowledge about quantitative methods and statistical modelling through teaching, research, publications, and programming applications and software packages for quantitative data analysis."
  },
  {
    "objectID": "about.html#scope-and-research-focus",
    "href": "about.html#scope-and-research-focus",
    "title": "About",
    "section": "Scope and research focus",
    "text": "Scope and research focus\nThe QMRG encompasses a broad range of topics in design and quantitative data analysis with a particular focus on developing new statistical software packages and programming applications for popular statistical software such as R, Stata and Mplus, and the application of advanced statistical techniques, covering structural equation modelling (both CB-SEM and PLS-SEM) and multilevel modelling (MLM) for panel research and intensive longitudinal designs in the psychological sciences."
  },
  {
    "objectID": "about.html#specific-aims-and-objectives",
    "href": "about.html#specific-aims-and-objectives",
    "title": "About",
    "section": "Specific aims and objectives",
    "text": "Specific aims and objectives\n\nOur work aims to promote quality teaching in quantitative methods and statistical modelling.\nOur research and innovation activities include developing statistical software packages and programming applications for quantitative data analysis.\nResearch at the QMRG covers aligning data types, research questions and underlying statistical models to ensure practical and thoughtful applications to theoretical models, and the accurate interpretation of fitted models to empirical data.\nThe QMRG aims to promote the quality of research design and methods, reproducible research practices, and statistical thinking and awareness throughout the research process."
  },
  {
    "objectID": "about.html#seminars-and-workshops",
    "href": "about.html#seminars-and-workshops",
    "title": "About",
    "section": "Seminars and Workshops",
    "text": "Seminars and Workshops\nThe QMRG organizes the Quantitative Seminar Series in Psychology, which comprises a broad range of in-person and online quantitative methods and statistical modelling workshops and seminars.\nWorkshops and seminars at QMRG cover an array of topics, methods, and software that are applied across different research areas, including, but not limited to, R/Stata programming, panel and intensive longitudinal designs, structural equation modelling, multilevel modelling, mixture modelling, Reproducible/automated reporting, among others."
  },
  {
    "objectID": "articles.html",
    "href": "articles.html",
    "title": "Articles",
    "section": "",
    "text": "Software Packages for Partial Least Squares Structural Equation Modeling: An Updated Review.\n\n\n\n\n\n\n\nPartial least squares (PLS)\n\n\nStructural equation modeling (SEM)\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "books.html",
    "href": "books.html",
    "title": "Books",
    "section": "",
    "text": "Applied Statistics Using R: A Guide for the Social Sciences\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nInnføring i R for statistiske dataanalyser\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quantitative Methods Research Group",
    "section": "",
    "text": "The Quantitative Methods Research Group (QMRG) is a specialized research group which centers on the development and advanced applications of quantitative methods and statistical modelling for the psychological sciences. The QMRG is based in the Department of Psychology at the Norwegian University of Science and Technology (NTNU).\nOur main goal is to produce and disseminate knowledge about quantitative methods and statistical modelling through teaching, research, publications, and programming applications and software packages for quantitative data analysis."
  },
  {
    "objectID": "packages.html",
    "href": "packages.html",
    "title": "Packages",
    "section": "",
    "text": "Software Packages\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people.html",
    "href": "people.html",
    "title": "People",
    "section": "",
    "text": "Håvard Rudi Karlsen\n\n\n\nStatistics\n\n\nPsychometrics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSubramanya Prasad Chandrashekar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMons Bendixen\n\n\n\nStatistics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrederick Anyan\n\n\n\nSEM\n\n\nPanel Data\n\n\nMLM/HLM\n\n\nRStudio\n\n\nJASP\n\n\nNetwork Analysis\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMehmet Mehmetoglu\n\n\n\nSEM\n\n\nStata\n\n\nRStudio\n\n\nProgramming\n\n\nPackages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrond Løkling\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMatthias Mittner\n\n\n\nStatistics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people/hrudi/havard.html",
    "href": "people/hrudi/havard.html",
    "title": "Håvard Rudi Karlsen",
    "section": "",
    "text": "Håvard is an Associate Professor of Personality Psychology and Psychometrics. This means that I do research on individual differences and what makes us behave as we do. And that I am especially interested in the methods and instruments we use to examine this. Apart from that, I have worked within health psychology, looking at anxiety and depression and their relationship with cardiovascular disease (spoiler warning: it’s complicated).\nLately I have been lucky enough to work with VR technologies and their use in teaching and skill development. I teach statistics, personality psychology, work and organisational psychology as well as health psychology."
  },
  {
    "objectID": "people/hrudi/havard.html#areas-of-expertise",
    "href": "people/hrudi/havard.html#areas-of-expertise",
    "title": "Håvard Rudi Karlsen",
    "section": "Areas of expertise",
    "text": "Areas of expertise\nIn terms of statistics, I’m familiar with regression analysis (simple, multiple, logistic) and structural equation modelling, as well as t tests, ANOVA, chi square tests, correlation analysis and factor analysis (confirmatory and exploratory). I have some limited experience in big data analysis and machine learning, and am looking into working more on this. I mainly use R for analysis (as well as write up and publishing), but have in the past used Stata and SPSS, as well as some Python."
  },
  {
    "objectID": "people/hrudi/havard.html#supervision",
    "href": "people/hrudi/havard.html#supervision",
    "title": "Håvard Rudi Karlsen",
    "section": "Supervision",
    "text": "Supervision\nI have supervised bachelor’s and master’s students, and I have taught in bachelor, master and PhD courses. In 2020 I won a price for research dissemination.\nAre you writing a master’s thesis at the department and in need of a supervisor? If you have a good idea for a project that falls within my areas of expertise, shoot me an e-mail and we can discuss the idea and whether you want me as your supervisor. I currently have no open projects in need of a student, but I’m always up for discussion any ideas you might have.\nAre you dreaming of becoming a PhD student? Again, if you have a good idea, don’t hesitate to get in touch. The road to funding and a position is long, but if you succeed it’s worth it!\nPersonal website"
  },
  {
    "objectID": "people/prasad/prasad.html",
    "href": "people/prasad/prasad.html",
    "title": "Subramanya Prasad Chandrashekar",
    "section": "",
    "text": "I am currently a postdoctoral fellow in the Department of Psychology at the Norwegian University of Science and Technology (NTNU). My research focuses on: Judgment and Decision Making; Choice, agency, and related lay-beliefs (e.g. belief in free will); Moral psychology; Replication; Open science. I received my Ph.D. in Management (Organizational behaviour track) from the Hong Kong University of Science and Technology.\nPersonal website"
  },
  {
    "objectID": "people/mons/mons.html",
    "href": "people/mons/mons.html",
    "title": "Mons Bendixen",
    "section": "",
    "text": "Main areas of interest: Evolutionary social psychology, jealousy and forgiveness, sexual regret, sexual misperception, flirt, sexual harassment, bullying, ostracism, antisocial and aggressive behavior.\nDownload CV\nPersonal website"
  },
  {
    "objectID": "people/frederick/frederick.html",
    "href": "people/frederick/frederick.html",
    "title": "Frederick Anyan",
    "section": "",
    "text": "Frederick is an Associate Professor of Quantitative Methods and co-leader of the Quantitative Methods Research Group (QMRG) at the Norwegian University of Science and Technology, NTNU\nHis background in applied analysis in panel and intensive longitudinal data, as well as structural equation modelling (SEM) and hierarchical linear modelling (HLM) enables his participation in research to uncover subtle patterns in complex data sets, teasing apart minute details to reveal crucial insights that could inform effective interventions.\nPersonal website"
  },
  {
    "objectID": "people/mehmet/mehmet.html",
    "href": "people/mehmet/mehmet.html",
    "title": "Mehmet Mehmetoglu",
    "section": "",
    "text": "Mehmet is a professor in the Department of Psychology at the Norwegian University of Science and Technology in the city of Trondheim in Norway. He additionally holds a Professor II position at the Inland Norway University of Applied Sciences.\nMehmet has a fairly varied academic background, on the basis of which I have been awarded professorships in the following fields:\n\n\nPsychology (2020)\n\n\nMarketing (2019)\n\n\nQuantitative Research Methods (2012)\n\n\nTourism (2007)\n\n\nMy academic and research interests centre on:\n\n\nProgramming R and Stata Statistical Packages\n\n\nStructural Equation Modelling\n\n\nHuman Mate Choice Behaviour\n\n\nConsumer and Tourist Behaviour\n\n\nPersonal website"
  },
  {
    "objectID": "people/trond/trond.html",
    "href": "people/trond/trond.html",
    "title": "Trond Løkling",
    "section": "",
    "text": "Trond is a\nPersonal website"
  },
  {
    "objectID": "people/matthias/matthias.html",
    "href": "people/matthias/matthias.html",
    "title": "Matthias Mittner",
    "section": "",
    "text": "Matthias Mittner is a professor and leader of the research group for cognitive neuroscience at the University of Tromsø and a professor of quantitative research methods at the Norwegian University of Science and Technology in Norway. He has broad experience teaching university courses in statistics and research methods ranging from introductory to advanced topics both at the Bachelor, Master and PhD-level. His main research interests are centered on the neurobiology of cognitive functions and he is also interested in the development of methodological approaches and computational methods, cognitive modeling, machine-learning and Bayesian statistics. Matthias has studied psychology and computer science and completed his PhD in psychology at the University of Frankfurt (Germany). He has previously worked as a post-doc at the Max-Planck Institutes for Dynamics and Self-Organization as well as the MPI for experimental medicine and the University of Amsterdam (The Netherlands).\n\n\n\nPersonal website\nProfessional website at UiT\nProfessional website at NTNU\nLab website"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "Readme",
    "section": "",
    "text": "Readme\nThis is the webpage for the QMRG research group of NTNU."
  },
  {
    "objectID": "shinyapps.html",
    "href": "shinyapps.html",
    "title": "ShinyApps",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "articles/plssem.html",
    "href": "articles/plssem.html",
    "title": "Software Packages for Partial Least Squares Structural Equation Modeling: An Updated Review.",
    "section": "",
    "text": "Read more"
  },
  {
    "objectID": "best/short_guidelines/guidelines.html",
    "href": "best/short_guidelines/guidelines.html",
    "title": "Guidelines for R at IPS",
    "section": "",
    "text": "This is a short document that gives some suggestions for packages and functions to use for various task in R. It came about on requests from staff at the Department of Psychology (IPS). It is merely a guideline for those who want input or tips for which tools to use for the job. With R there will always be a practically unlimited set of options for how to do anything. Feel free to use whatever speaks to your soul.\nNote that this list is based on the text book used in the master’s course in statistics, 3100 - Quantiative methods, (Mehmetoglu & Mittner, 2022). Hence, these are the tools that the students will be taught and should be familiar with."
  },
  {
    "objectID": "best/short_guidelines/guidelines.html#background",
    "href": "best/short_guidelines/guidelines.html#background",
    "title": "Guidelines for R at IPS",
    "section": "Background",
    "text": "Background\nIPS is moving away from the proprietary software packages SPSS and Stata and towards JASP and R. JASP is a SPSS-like graphical user interface built atop R and should be familiar to those who worked in SPSS. R is a programming language geared towards statistics. This is in line with NTNU’s policy of developing and using open source software, and could potentially save NTNU billions of Norwegian øre in licencing costs."
  },
  {
    "objectID": "best/short_guidelines/guidelines.html#the-guidelines",
    "href": "best/short_guidelines/guidelines.html#the-guidelines",
    "title": "Guidelines for R at IPS",
    "section": "The guidelines",
    "text": "The guidelines\nNaming convention in these guidelines: Package name in bold, function name in backticks. Alternatively, package_name::function_name() to indicate both the function and the package it comes from. If no package is specified, the function comes from one of the standard packages loaded when you start R1.\n\nWorking with R\nWe suggest working with an updated version of R, and using RStudio. It is smart to organise your files and workflow in RStudio’s projects. This makes it easier to keep track of files and scripts.\nWe strongly recommend turning off automatic restoration of workspace at startup. See this blog post for more details. This will save you a lot of headaches down the line.\nThe text book uses the magrittr pipe %&gt;% which was common at the time of publication. Since then, the base R pipe |&gt; has taken over in popular use. Students will be exposed to both. They are mostly interchangeable for the use cases in the course.\nWe use &lt;- for assignment instead of =. Ie:\n\nhead_honcho &lt;- c(\"Magne\")\n\nWe recommend working script-based as much as possible. This way, you and any collaborators (like students) start out with identical data sets, and do all your work on it via scripts that are run for each session. This ensures that the collaborators can easily recreate the same state of the data to check on work others did. The alternative, where each set of collaborators start storing different versions of the dataset with different variables can quickly create a mess and make it difficult to know exactly what was done to the dataset. Writing a data setup script that loads the data and wrangles the dataset (recoding variables, dropping specific cases, etc.) is helpful in this regard. Then you can keep a separate script for analysis.\nWhen it comes to how to write code, we recommend working with the Tidyverse style guide. This makes code more readable and thus more understandable.\n\n\nData import\n\nhaven for importing files from Stata, SPSS and SAS\nreadxl for importing Excel files\nreadr::read_csv() for importing csv files. Though read.csv() from base R also works fine.\n\nDatasets should be stored as either tibble() or data.frame().\n\n\nData wrangling\nBoth base R and tidyverse approaches are used. For instance, choosing specific rows or columns of a data frame can be done either in base R with brackets [] or with select() and filter() from dplyr:\n\n# load dataset for demonstration\nlibrary(palmerpenguins)\n\n# Select columns\npenguins[\"bill_length_mm\"]\npenguins |&gt; dplyr::select(bill_length_mm)\n\n# Select rows\npenguins[penguins$bill_length_mm &gt; 55, ]\npenguins |&gt; dplyr::filter(bill_length_mm &gt; 55)\n\n\nFor creating new variables: mutate() from dplyr.\nFor working on categorical variables: forcats\n\n\n\nSummary statistics\n\nsummarytools: creates summaries of datasets\nmodeest: estimates the mode\npsych: contains helpful functions for correlation\nmoments: functions that calculate skewness and kurtosis\ndplyr::summarise(): creates summary tables\nstargazer: for creating tables\n\n\n\nGraphs\nThe general recommendation is to use ggplot2 for most things.\n\n\nData analysis\nLinear regression: lm() is used for fitting linear regression models. It comes from stats, one of the base R packages.\n\nlm(bill_length_mm ~ sex + body_mass_g,\n   penguins)\n\n\nlm.beta::lm.beta(): for standardised regression coefficients. Alternatively, normalise all variables with scale() and then run normal lm()\nmulticomp: test linear combination hypotheses using glht()\ncar: test joint significance of coefficients\nrelaimp: computes semi-partial correlations using calc.relimp()\nperformance::check_model(): gives graphs to illustrate the performance of a model\nfastDummies: creates dummy variables\nsandwich: propvides robust standard errors\ninteractions: has functions for anlaysing interactions, like sim_slopes()\n\nLogistic regression: We fit a model with glm(), specifying that glm()’s family is binomial, and that binomial()’s link is \"logit\". In other words:\n\nglm(formula = sex ~ bill_length_mm + body_mass_g,\n    family = binomial(link = \"logit\"),\n    data = penguins)\n\nSince link defaults to \"logit\", this can also be written out like this (if we drop argument names)\n\nglm(sex ~ bill_length_mm + body_mass_g,\n    binomial(),\n    penguins)\n\n\nlmtest: implements the likelihood ratio test with lrtest()\nDescTools::PseudoR2(): returns a variety of Pseudo \\(R^2\\)s\nvisreg: visualise regression omodels\n\nExploratory factor analysis. The psych package contains functions for doing factor analysis\n\nfa.parallel(): for parallel analysis\nfa(): for factor analysis\nprincipal(): for principal component analysis (PCA)\n\nStructural equation modelling: The lavaan package is used for SEM.\n\nfunctions from lavaan\n\ncfa(): for CFA\nsem(): for SEM\nmodindices(): for modification indices\nstandardizedSolution(): for standardised estimates\n\nastatur::relicoef(): for reliability coefficients. Note that astatur has to be downloaded from GitHub, not CRAN. Run devtools::install_github(\"ihrke/astatur\")."
  },
  {
    "objectID": "best/short_guidelines/guidelines.html#references",
    "href": "best/short_guidelines/guidelines.html#references",
    "title": "Guidelines for R at IPS",
    "section": "References",
    "text": "References\n\n\nMehmetoglu, M., & Mittner, M. (2022). Applied statistics using R: A guide for the social sciences. Sage."
  },
  {
    "objectID": "best/short_guidelines/guidelines.html#footnotes",
    "href": "best/short_guidelines/guidelines.html#footnotes",
    "title": "Guidelines for R at IPS",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThese are colloquially called base R, though only one of the packages is actually called base↩︎"
  },
  {
    "objectID": "best/scripting/scriptingR.html",
    "href": "best/scripting/scriptingR.html",
    "title": "Scripting in R",
    "section": "",
    "text": "RStudio combines an editor (sometimes called source), console, file manager, and visualization tools in one place, making it easier to manage your workflow. This is a short walk-through of how to use R scripts to organize your workflow. Let’s start with the primary pane layouts in RStudio."
  },
  {
    "objectID": "best/scripting/scriptingR.html#pane-layout-in-rstudio",
    "href": "best/scripting/scriptingR.html#pane-layout-in-rstudio",
    "title": "Scripting in R",
    "section": "Pane layout in RStudio",
    "text": "Pane layout in RStudio\nThere are four primary panes in the RStudio IDE (Integrated Development Environment) user interface. These are\n\nSource or editor pane: This is where you write your code. The code will run when you send to the console.\nConsole pane: This is where your code executes when you send from the editor pane. You can also execute quick codes that you do not want to save here.\nEnvironment pane: This is where objects in your working space are displayed. This pane also contains History, Connections, Build, and Tutorial tabs.\nOutput pane: This is where you can see your files directory, view plots, packages, access R help, and other tabs\n\n\n\n\nRStudio pane layout\n\n\n\n\n\n\n\n\nYou can minimize or maximize each pane within each quadrant by clicking the minimize/maximize buttons on the top right of each pane."
  },
  {
    "objectID": "best/scripting/scriptingR.html#using-r-scripts",
    "href": "best/scripting/scriptingR.html#using-r-scripts",
    "title": "Scripting in R",
    "section": "Using R scripts",
    "text": "Using R scripts\nIn R, a script is a file that contains a series of R commands written in the R language that can be executed in sequence. When you work interactively with R, you often enter commands directly into the console. While this is useful for quick tasks, it is not practical for more complex tasks or when you want to keep a record of your workflow. Scripting to the rescue! An image of an R script is shown below.\n\n\n\nAn R Script\n\n\nScripts are essential for reproducibility, as they allow you to document and track the entire workflow (e.g., data analysis process from start to finish). We will look more into the concept of scripting in R, explaining their importance in your workflow management. But First, it is important that you have familiarized yourself with managing projects in R, if you already do not know how to manage projects in R. You can also benefit from some guidelines and convention when working in R"
  },
  {
    "objectID": "best/scripting/scriptingR.html#components-of-a-typical-script",
    "href": "best/scripting/scriptingR.html#components-of-a-typical-script",
    "title": "Scripting in R",
    "section": "Components of a typical script",
    "text": "Components of a typical script\nComments in R are written with a #. For example, #Load the UpSetR package to access the upset () function\n\nLoading Libraries: Most scripts begin by loading the necessary R packages using the library() function. Let’s load these two packages.\n\n\nlibrary(UpSetR) #Load the UpSetR package to access the `upset ()` function\nlibrary(ggplot2) #Load ggplot2 for data visualization\n\n\nData Loading: Next, we will load our data, often from a file like a CSV.\n\n\n#Load data\ndata &lt;- read.csv(\"/Volumes/anyan/qmrg_group/best/scripting/dataupset.csv\") \n\n#Assign names to variables in the dataset\nnames(data) &lt;- c(\"separation\", \"mutism\", \"phobia\", \"social\", \"panic\", \"anxiety\", \"depression\", \"ptsd\") \n\n\nData Cleaning and Manipulation: This section of the script would include all the steps we take to clean and prepare our data for analysis.\n\n\n#Removing rows with missing values\ndata &lt;- na.omit(data)  \n\n\nAnalysis: Here, we perform the actual analysis. So, let’s regress depression on anxiety.\n\n\n#Regress depression on anxiety\nmodel &lt;- lm(depression ~ anxiety, data=data) \n\n\nVisualization: Finally, scripts often include code to visualize the results.\n\n\nggplot(data, aes(x = anxiety, y = depression)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"lm\")\n\n\n\n\nThe blue line represents the fitted regression line and the grey bands represent the 95% confidence interval limits.\nR has enormous capabilities for visualizations! For example, we can produce an upset plot to visualize the size and the pairwise combinations or intersections of sets and their aggregates. This facilitates easy-to-understand communication of the size or proportion of set memberships.\n\nupset(data,                    \n      nsets = 8,                \n      matrix.color = \"red\", \n      sets.bar.color = \"blue\", \n      order.by = \"freq\",          \n      set_size.show = TRUE) \n\n\n\n\nThe blue bar chart shows the total size of the sets (i.e., set size). The red filled-in circles corresponds to intersections or overlaps showing which set is part of an intersection or which symptoms overlaps with which other symptoms(s). For example, panic and mutism form an intersection or overlap, and so does panic and phobia. Additionally, panic, mutism, phobia and separation also form an intersection. And so on…The black bar chart shows the frequencies for each intersection (or intersection size)."
  },
  {
    "objectID": "best/scripting/scriptingR.html#why-scripts-are-so-important",
    "href": "best/scripting/scriptingR.html#why-scripts-are-so-important",
    "title": "Scripting in R",
    "section": "Why scripts are so important",
    "text": "Why scripts are so important\n\nReproducibility: Scripts ensure that your workflow is organized in a manner that can be reproduced by others or by you at a later time. Everything from loading packages through loading data to final analysis and visualizations is documented in one place. In an R script.\nAutomation: I believe in the “easier-is-better” heuristic approach to learning. Well, not always, but don’t worry yet. If you, like myself find yourself repeating the same steps often (like data cleaning or generating specific plots), and also believe, even if only a little that “easier-is-better”, then follow me - haha!😄. A script allows you to automate these tasks and saves you a lot of time. Makes things easier!\nCollaboration: Some things cannot be shared, and I won’t share my caramel candies. Never! But my R scripts can definitely be shared. This makes it easier to collaborate on projects with colleagues. So that my colleagues can see exactly what steps I took and suggest improvements or changes. Well, not all of your suggestions or changes will be accepted by colleagues. Still, don’t worry. Move on!"
  },
  {
    "objectID": "best/scripting/scriptingR.html#writing-r-scripts-in-the-editor",
    "href": "best/scripting/scriptingR.html#writing-r-scripts-in-the-editor",
    "title": "Scripting in R",
    "section": "Writing R scripts in the Editor",
    "text": "Writing R scripts in the Editor\nThe primary tool for writing scripts is the R editor, but we can also use other text editors. R script is the most commonly used for scripting, offering features like syntax highlighting, code completion, and direct execution of code. Some of these features are very helpful. For example, syntax highlighting helps differentiate between functions, variables, and comments, making code easier to read and debug. R script can also organize code with comments, meaningful variable names, and consistent formatting. As you have probably already seen, my codes have been annotated with comments that is very useful for handling complex tasks in R. While writing scripts, RStudio will suggests codes as you type, reducing the chances of errors and speeding up coding.\nSublime Text, Visual Studio Code, or even a basic text editors (e.g., Notepad++, TextEdit) can be used, though they might lack some R-specific features. The editor is where we compose and edit R scripts as such using a good editor can significantly enhance productivity."
  },
  {
    "objectID": "best/scripting/scriptingR.html#best-practices-when-scripting",
    "href": "best/scripting/scriptingR.html#best-practices-when-scripting",
    "title": "Scripting in R",
    "section": "Best practices when scripting",
    "text": "Best practices when scripting\n\nUse Comments: Comments start with # and are ignored by R when the script runs. Use them to explain your code. Have a look over my codes again and also see the example below\n\n\n# This function calculates the mean of a vector\nmean_value &lt;- mean(c(1, 2, 3, 4, 5))\n\n\nMeaningful Variable Names: Choose names that clearly describe the data or function of the variable.\n\n\n#Here, it is easier to know or remember that the object mean_value contains the mean of 1, 2, 3, 4, 5\nmean_value &lt;- mean(c(1, 2, 3, 4, 5)) \n\n\nConsistent Formatting: Stick to a consistent style (e.g., spacing, indentation) to make your code readable."
  },
  {
    "objectID": "best/scripting/scriptingR.html#opening-a-new-r-script",
    "href": "best/scripting/scriptingR.html#opening-a-new-r-script",
    "title": "Scripting in R",
    "section": "Opening a new R script",
    "text": "Opening a new R script\nNow, let me guide you through the process of creating a new R script within RStudio. Opening a new script is the first step in starting your R programming tasks. This is a very basic, yet crucial, task.\nSteps:\n\nIn RStudio:\n\nGo to File &gt; New File &gt; R Script.\nThis opens a blank script where you can start writing your R code.\nYou can immediately start writing R code in the newly opened script.\n\n\n\n\n\nOpening a new R script\n\n\n\nSaving the Script:\n\nIt is good practice to save your script right away.\nUse Ctrl+S (Windows) or Cmd+S (Mac) to save the script regularly as you write it. Always choose a descriptive file name.\nYou can also use the point-and-click function by going to File &gt; Save.\nIt is also good practice to save your script in a directory related to your project. RStudio projects are helpful for keeping everything organized. Look here for managing R projects\n\n\n\n\n\nSaving R Script for first time\n\n\nUp to this point, you are on your way to writing your first R script! But first, let’s look at how to send the code in the script from the editor to the console."
  },
  {
    "objectID": "best/scripting/scriptingR.html#sending-code-from-editor-to-the-console",
    "href": "best/scripting/scriptingR.html#sending-code-from-editor-to-the-console",
    "title": "Scripting in R",
    "section": "Sending code from editor to the console",
    "text": "Sending code from editor to the console\nThis section will show how to send R script code from the editor pane to the R console pane for execution. This is essential for testing and running your code incrementally.\nSteps:\n\nHighlight Code:\n\nHighlight a section of code in your script.\nYou can also move your mouse pointer to the start line of a code\n\nSend to Console:\n\nUse Ctrl+Enter (Windows) or Cmd+Enter (Mac) to send the selected code to the console.\n\nRun Entire Script:\n\nUse Ctrl+Shift+S (Windows) or Cmd+Shift+S (Mac) to run the entire script.\nYou can also use the point-and-click by going to the top-right corner of the source pane and clicking on Run"
  },
  {
    "objectID": "best/scripting/scriptingR.html#your-first-r-script",
    "href": "best/scripting/scriptingR.html#your-first-r-script",
    "title": "Scripting in R",
    "section": "Your first R script",
    "text": "Your first R script\nNow is the time for you to go through writing your first simple R script. The focus here is on basic operations that demonstrate the functionality of R. Writing your first script is an exciting step so we will try to perform some basic calculations and generate a plot.\nSteps:\n\nStart with a Comment:\n\nAlways begin with a comment to describe what the script does. Comments are written with a #.\n\n\n# This is my first R script. I am going to do some basic calculations and plotting.\n\nBasic Calculation:\n\nLet’s perform a simple calculation.\n\n\n\n# Calculate 2 plus 2\nresult &lt;- 2 + 2\n\n#Show results\nprint(result)  \n\n[1] 4\n\n\n\nAssign Values to Variables:\n\nYou can assign the result of any operation to a variable.\n\n\n\n#Assign 5 to x, and 3 to y\n x &lt;- 5\n y &lt;- 3\n \n#Find the sum of x + y and show the results\n sum_xy &lt;- x + y\n print(sum_xy)  \n\n[1] 8\n\n\n\nSimple Plotting:\n\nR has powerful plotting capabilities built-in. Here’s a basic example:\n\n\n\n#This code plots the numbers 1 through 10 on a simple scatter plot, labeling the axes.\nplot(1:10, main=\"Simple Plot\", \n     xlab=\"X Axis\", \n     ylab=\"Y Axis\") \n\n\n\n\n\nSave and Run the Script:\n\nSave your script and run it to see the results. In RStudio, you can select the code and press Ctrl+Enter to send it to the console."
  },
  {
    "objectID": "best/scripting/scriptingR.html#getting-help",
    "href": "best/scripting/scriptingR.html#getting-help",
    "title": "Scripting in R",
    "section": "Getting help",
    "text": "Getting help\nThis section provides guidance on where you can find more help if you encounter issues or want to learn more.\nResources:\n\nIPS resources: Here in IPS we have the R Club and the R Workshop seminar series. Follow the links to Teams channels for more information. The Quantitative Seminar Series in Psychology delivers a broad range of in-person and online quantitative methods and statistical modelling workshops. The last session is available here.\nR Help Files: Use ?function_name or help(function_name) to access built-in help for any function.\nOnline Communities: Stack Overflow, RStudio Community, and R-help mailing lists are great places to ask questions.\nR Documentation: Comprehensive manuals are available at the R project website.\nTutorials and Books: Recommend a few beginner-friendly books or online courses for further learning."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html",
    "href": "best/Structuring_R_projects/Structuring_projects.html",
    "title": "Managing projects in R",
    "section": "",
    "text": "Many new users of R and RStudio wonder how they should go about to structure their data-analysis projects. Coming from a software like SPSS, many users are used to having a single file that contains all the data and the analysis. In R, however, it is recommended to split up the project into multiple files and folders. This makes it easier to keep track of the different parts of the project and to collaborate with others. In this post, we will show you our recommended way to structure your projects for analyzing data in R and RStudio."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#quick-overview",
    "href": "best/Structuring_R_projects/Structuring_projects.html#quick-overview",
    "title": "Managing projects in R",
    "section": "Quick overview",
    "text": "Quick overview\nHere is a quick overview of the files and folders that we recommend you create for your R projects:\n\n\ndata/ is a folder that contains all data in the “rawest” possible format (e.g., .csv, .xlsx, .txt, etc.)\ndoc/ is a folder that contains all documentation for the project (e.g., the project proposal, the final report, ethics, etc.)\nfigures/ is a folder that contains all figures that are generated during the analysis\nscripts/ is a folder that contains all R-scripts that you will create during the analysis\nreports/ is a folder that contains all reports that are generated during the analysis (e.g., .html, .pdf, .docx, etc.)\nprojectA.Rproj is the RStudio project file that you will use to open the project in RStudio\nREADME.md is a markdown file that contains a brief description of the project\n\nWe will motivate and discuss why we recommend this structure in the following sections."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#introduction",
    "href": "best/Structuring_R_projects/Structuring_projects.html#introduction",
    "title": "Managing projects in R",
    "section": "Introduction",
    "text": "Introduction\nWe recommend that you create an overarching folder that contains all your data-analysis projects (here, it is called my_projects). Within this folder, we will create new sub-folders that will contain everything related to our different projects. For example, for a analyzing data for your Bachelor-thesis, you could create a folder called my_projects/bachelor or for your new paper on trauma patients, you could create a folder my_projects/trauma (the / in a directory name means that it will be created within the folder that comes before it). In the figure above, there are three different projects called projectA, projectB, and projectC.\nThese project folders contain all relevant files for that particular project. The goal of this post is to show you how to structure these project directories in a standard way that is similar for all your projects. This is very important, as it will enable you to quickly find the files you are looking for and to collaborate with others."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#creating-a-new-project",
    "href": "best/Structuring_R_projects/Structuring_projects.html#creating-a-new-project",
    "title": "Managing projects in R",
    "section": "Creating a new project",
    "text": "Creating a new project\nWe recommend starting a new data-analysis project from within RStudio. Simply open RStudio and click on File -&gt; New Project.... This will open the “New Project Wizard” that will guide you through the process of creating a new project.\n\nIf you have already created the project directory (in our example projectA), you can select the option “Existing Directory” and navigate to the folder that contains the project directory. If you have not yet created the project directory, you can select the option “New Directory” and specify the name of the project directory (choose “New project” as the project type). In both cases, RStudio will open in the newly created project.\n\nImportantly, RStudio has created a file called projectA.Rproj in the project directory. This file is called the RStudio project file and it contains information about the project that RStudio needs to know in order to work with the project. Do not delete or move this file. From now on, whenever you want to work on this particular project, simply navigate to the project folder projectA and double-click on the projectA.Rproj file. RStudio will open and load the project."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#populating-the-project-directory",
    "href": "best/Structuring_R_projects/Structuring_projects.html#populating-the-project-directory",
    "title": "Managing projects in R",
    "section": "Populating the project directory",
    "text": "Populating the project directory\nBefore doing anything else, we recommend creating a file called README.md in the project directory. This file should contain a brief description of the project, including the goal of the project, the data that you are analyzing, and any other relevant information (such as the date and place the data was collected). This file is written in markdown, which is a simple way to format text. Here is an example of what the README.md file might look like:\n# Project A\n\nThis project analyzes data from a study on happiness and age. \nThe data was collected in 2024 in Oslo, Norway. The goal of the project is to \ninvestigate the relationship between age and happiness and to identify \nfactors that influence happiness.\n\n## Data\n\nThe data for this project is stored in the `data` directory. \nThe following files are available:\n\n- `questionnaires.csv`: Contains responses to a questionnaire about happiness\n- `demographics.xlsx`: Contains demographic information about the participants\n- `additional_measures.sav`: Contains additional measures of happiness\n\n## Related papers\n\n- Doe, J., & Smith, J. (2025). Age and happiness: A meta-analysis. \n  *Journal of Happiness Studies*, 10(2), 123-135.\n\n## Contributors\n\n- John Doe\n- Jane Smith\n- Asbjørn Asbjørnsen\n- Teodor Fontane\nIt is very useful to keep this file up-to-date as the project progresses. It can serve as a quick reference for what the project is about and what files are available. It can also be useful for collaborators who are working on the project with you.\nNext, we recommend adding any information about your current project to the doc folder. This folder can contain any documentation that is relevant to the project, such as the project proposal, the final report, ethics applications, etc. You can create a new folder called doc within the project directory and add any relevant files to this folder. For example, you might add a file called project_proposal.docx to the doc folder that contains the project proposal, or a file called ethics_approval.pdf that contains the ethics approval for the project. Keeping this type of meta-information close to the project data can be helpful when you need to find it later on.\nThe next step is moving your raw data into the project directory. Create a folder called data within the project directory and move all your raw data files into this folder. These files might come from an online software such as Nettskjema, be produced by an experimental script in lab studies or may be Excel or SPSS files where you have stored your data. Copy or move these files into the data directory and give them “telling” names (e.g., questionnaires.csv, participant01.xlsx, etc.)."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#importing-and-analyzing-data",
    "href": "best/Structuring_R_projects/Structuring_projects.html#importing-and-analyzing-data",
    "title": "Managing projects in R",
    "section": "Importing and analyzing data",
    "text": "Importing and analyzing data\nIn the next step, you will want to read these files into R/RStudio so that you can start analyzing the data. We recommend that you create a new R-script in the scripts directory called 01_import_data.R. The initial number in that script name specifies that this script should be run first. We recommend creating new scripts for each step of the analysis and numbering them in the order that they should be run. This can make it easier to keep track of the analyses when exploring the data.\nIn the 01_import_data.R script, you can use R’s many functions for reading data files (e.g., read.csv(), read_excel(), etc.) to read the data files into R. In our example, we have added files questionnaires.csv, demographics.xlsx and additional_measures.sav to the data folder. The 01_import_data.R script might look like this:\n# Load the necessary packages\nlibrary(readr)\nlibrary(readxl)\nlibrary(haven)\n\n# Read the data files\nquestionnaires &lt;- read_csv(\"data/questionnaires.csv\")\ndemographics &lt;- read_excel(\"data/demographics.xlsx\")\nadditional_measures &lt;- read_sav(\"data/additional_measures.sav\")\nAfter you have read the data into R, you can start analyzing the data. We recommend that you create a new script in the scripts directory called 02_explorative_analysis.R. In this script, you can start exploring the data, creating plots, and running descriptive analyses. You can include the first script in this script to ensure that the data is loaded before you start analyzing it by using source(\"scripts/01_import_data.R\"). For example, the 02_explorative_analysis.R script might look like this:\n# Load the data\nsource(\"scripts/01_import_data.R\")\n\n# Load the necessary packages for plotting/descriptive analysis\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Create a plot\nggplot(data = questionnaires, aes(x = age, y = happiness)) +\n  geom_point() +\n  labs(title = \"Happiness as a function of age\")\n\n# Run a descriptive analysis\nsummary(demographics)\nAdditional analyses can be added in further scripts (e.g., 03_multilevel_model.R, 04_test_logistic_regression.R, etc.).\nInstead of splitting the analysis over several scripts, you can also collect all of the code in a single script. However, it is often a good idea to create new scripts as our insight into the data and the desired analyses evolve. That way, it is possible to save an earlier version of the analysis that we might want to come back to later on."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#saving-figures-and-reports",
    "href": "best/Structuring_R_projects/Structuring_projects.html#saving-figures-and-reports",
    "title": "Managing projects in R",
    "section": "Saving figures and reports",
    "text": "Saving figures and reports\nOften, you create figures or tables during the analysis that you want to save for later use. We recommend that you create a new folder called figures within the project directory and save all figures that you create during the analysis in this folder. You can save the figures using the ggsave() function from the ggplot2 package. For example, you can save the plot that you created in the 02_explorative_analysis.R script like this:\n# code from 02_explorative_analysis.R above\n# ...\n\n# Save the plot\nggsave(\"figures/02_happiness_age_plot.png\", plot = p)\nThis will create a PNG image of the plot and save it in the figures directory under the name 02_happiness_age_plot.png. Note that we added the number of the script that the plot was produced from to the filename (i.e., the figure 02_happiness_age_plot.png was produced in script starting with 02, which is the script file scripts/02_explorative_analysis.R). That way, it is easy to keep track of which script produced which figure also later when using them in scientific papers or other reports.\nFinally, you might want to create reports that summarize the results of the analysis. We recommend that you create a new folder called reports within the project directory and save all reports that you create during the analysis in this folder. There are many different ways to create relevant reports. The simplest way might be to create a Word-file, for example reports/02_data_summary.docx, where you collect notes, tables and figures that are relevant for the analysis. A more elegant but also more advanced way to create reports is using Quarto that mixes R code and text and can easily be translated into a Word report, a website, a powerpoint presentation and many other formats. See the Tutorial from the Quarto website."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#advanced-project-management",
    "href": "best/Structuring_R_projects/Structuring_projects.html#advanced-project-management",
    "title": "Managing projects in R",
    "section": "Advanced project management",
    "text": "Advanced project management\nAs you become more familiar with using R and RStudio, you might want to consider using both, a more elaborate structure for your projects and advanced management tools. An excellent resource for suggestions to implement a more advanced project structure is the ProjectTemplate package. This package provides a template for structuring your projects that includes features for “caching” intermediate results, loading packages automatically, providing convenient ways to transparently load and manage data and more.\nThe preferred tool to boost your project managegment is Git that allows you to implement version control for your projects (that means that you will be able to track changes to your files over time and collaborate with others). This allows you to manage your projects on Github which is an important platform for sharing and collaborating on projects.\nThese tools can be very powerful, but they also have a steep learning curve. We recommend that you first become comfortable with the basic project structure that we have outlined above before you start using these more advanced tools."
  },
  {
    "objectID": "best/Structuring_R_projects/Structuring_projects.html#further-information",
    "href": "best/Structuring_R_projects/Structuring_projects.html#further-information",
    "title": "Managing projects in R",
    "section": "Further information",
    "text": "Further information\n\nUsing RStudio Projects from POSIT\nMarkdown basics from Quarto\nProjectTemplate for advanced project management\nIntro for Git and Github for RStudio\nHappy Git a comprehensive guide for Git And Github with R/RStudio"
  },
  {
    "objectID": "best/New_to_stats/new_to_stats.html",
    "href": "best/New_to_stats/new_to_stats.html",
    "title": "New to statistics? Look here.",
    "section": "",
    "text": "There are many great resources here and here\nPå norsk Jo Røislien og her"
  },
  {
    "objectID": "best.html",
    "href": "best.html",
    "title": "QMRG’s Tips & Best Practices",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\n\n\nAre you an SPSS user? Look here\n\n\n\nSPSS\n\n\nRStudio\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHumour page\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScripting in R\n\n\n\nRStudio\n\n\nscripts\n\n\n\nHow do I organize and track my workflow when working in R? Read on to find out more!\n\n\n\nFrederick Anyan\n\n\nAug 22, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nManaging projects in R\n\n\n\nRStudio\n\n\n\nHow do I start a new project for data-analysis in R and RStudio? Which files and folder do I need to create? Where do I store my datafiles? Read on to find out!\n\n\n\nMatthias Mittner\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNew to statistics? Look here.\n\n\n\nRStudio\n\n\nstatistics\n\n\n\n\n\n\n\nGerit Pfuhl\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGuidelines for R at IPS\n\n\n\n\n\n\nHåvard R. Karlsen\n\n\nJul 30, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "books/appstatR.html",
    "href": "books/appstatR.html",
    "title": "Applied Statistics Using R: A Guide for the Social Sciences",
    "section": "",
    "text": "Get copy"
  },
  {
    "objectID": "books/innforingR.html",
    "href": "books/innforingR.html",
    "title": "Innføring i R for statistiske dataanalyser",
    "section": "",
    "text": "Get copy"
  },
  {
    "objectID": "packages/randstata.html",
    "href": "packages/randstata.html",
    "title": "Software Packages",
    "section": "",
    "text": "Click here for a collection of R and Stata packages that can be used for data analysis.\n\nR packages\n\nrmedsem: R package for statistical mediation analysis, developed in collaboration with Matthias Mittner.\nmmiss: R package to tabulate counts and percentages of missing values.\nrrelicoef: R package to compute Raykov’s factor reliability coefficient.\nrmint: R package to examine across-groups equivalence of confirmatory factor analysis (CFA) measurement model parameters.\nrcondisc: R package to perform convergent and discriminant validity assessment in CFA.\nrvimp: R package to assess the relative importance of predictors of a regression model.\n\n\n\nStata packages\n\nplssem: Stata package to implement Partial least squares structural equation modelling (PLS-SEM), developed in collaboration with Sergio Venturini.\nmedsem: Stata package for statistical mediation analysis.\nmint: Stata module to examine across-groups equivalence of confirmatory factor analysis (CFA) measurement model parameters.\ncondisc: Stata module to perform convergent and discriminant validity assessment in CFA.\nrelicoef: Stata module to compute Raykov’s factor reliability coefficient.\nfsdet: Stata module to compute Factor score determinacy coefficient.\nvaf: Stata module to compute mediation effect in SEM.\nsumscale: Stata module to generate summated scales.\nregcheck: Stata module to examine regression assumptions.\nregcoef: Stata module to compute coefficients for quantifying relative importance of predictors.\nsqmc: Stata module to compute squared multiple correlation.\nlogtest: Stata module to test significance of a predictor in logistic models.\npercat Stata module to perform percentile-based categorisation.\ncv: Stata module to compute coefficient of variation after regress."
  }
]